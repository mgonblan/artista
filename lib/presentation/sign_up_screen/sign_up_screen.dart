import 'controller/sign_up_controller.dart';import 'package:artista/core/app_export.dart';import 'package:artista/widgets/custom_button.dart';import 'package:artista/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'package:artista/data/models/register/post_register_req.dart';import 'package:artista/data/models/register/post_register_resp.dart';import 'package:artista/core/constants/role.dart';import 'package:fluttertoast/fluttertoast.dart';import 'package:artista/domain/googleauth/google_auth_helper.dart';import 'package:artista/domain/facebookauth/facebook_auth_helper.dart';class SignUpScreen extends GetWidget<SignUpController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.gray900, body: Container(width: double.maxFinite, padding: getPadding(left: 24, top: 27, right: 24, bottom: 27), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(top: 10), child: Text("msg_create_new_account".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistBold24Gray200)), Padding(padding: getPadding(top: 28), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_your_email".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistMedium14), CustomTextFormField(focusNode: FocusNode(), controller: controller.emailController, hintText: "msg_youremail_email".tr, margin: getMargin(top: 9), textInputType: TextInputType.emailAddress)])), Padding(padding: getPadding(top: 17), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_new_password".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistMedium14), CustomTextFormField(focusNode: FocusNode(), controller: controller.inputedController, hintText: "msg_set_new_password".tr, margin: getMargin(top: 9), padding: TextFormFieldPadding.PaddingT14_1, textInputType: TextInputType.visiblePassword, suffix: Container(margin: getMargin(left: 30, top: 14, right: 24, bottom: 14), child: CustomImageView(svgPath: ImageConstant.imgEyeGray600)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(52)))])), Padding(padding: getPadding(top: 17), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("msg_confirm_password".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistMedium14), CustomTextFormField(focusNode: FocusNode(), controller: controller.inputedOneController, hintText: "msg_enter_new_password".tr, margin: getMargin(top: 9), padding: TextFormFieldPadding.PaddingT14_1, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: Container(margin: getMargin(left: 12, top: 14, right: 24, bottom: 14), child: CustomImageView(svgPath: ImageConstant.imgEyeGray600)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(52)))])), CustomButton(height: getVerticalSize(52), text: "lbl_next".tr, margin: getMargin(top: 18), padding: ButtonPadding.PaddingAll15, onTap: onTapNext), Padding(padding: getPadding(top: 29), child: Row(children: [Padding(padding: getPadding(top: 9, bottom: 9), child: SizedBox(width: getHorizontalSize(139), child: Divider(height: getVerticalSize(2), thickness: getVerticalSize(2), color: ColorConstant.gray90001))), Container(padding: getPadding(left: 16, top: 2, right: 16, bottom: 2), decoration: AppDecoration.fillGray90001, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_or".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistMedium12)])), Padding(padding: getPadding(top: 9, bottom: 9), child: SizedBox(width: getHorizontalSize(139), child: Divider(height: getVerticalSize(2), thickness: getVerticalSize(2), color: ColorConstant.gray90001)))])), GestureDetector(onTap: () {onTapButton();}, child: Container(margin: getMargin(top: 29), padding: getPadding(left: 24, top: 13, right: 24, bottom: 13), decoration: AppDecoration.fillGray90001, child: Row(children: [CustomImageView(svgPath: ImageConstant.imgGoogle, height: getSize(24), width: getSize(24), margin: getMargin(top: 1, bottom: 1)), Padding(padding: getPadding(left: 38, top: 6), child: Text("msg_continue_with_g".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold16))]))), GestureDetector(onTap: () {onTapButton1();}, child: Container(margin: getMargin(top: 12), padding: getPadding(left: 24, top: 14, right: 24, bottom: 14), decoration: AppDecoration.fillGray90001, child: Row(children: [CustomImageView(svgPath: ImageConstant.imgFacebook, height: getSize(24), width: getSize(24)), Padding(padding: getPadding(left: 31, top: 3), child: Text("msg_continue_with_facebook".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold16))]))), Container(margin: getMargin(top: 12), padding: getPadding(left: 24, top: 13, right: 24, bottom: 13), decoration: AppDecoration.fillGray90001, child: Row(children: [CustomImageView(svgPath: ImageConstant.imgApple, height: getSize(24), width: getSize(24), margin: getMargin(top: 1, bottom: 1)), Padding(padding: getPadding(left: 43, top: 6), child: Text("msg_continue_with_a".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold16))]))])), bottomNavigationBar: Padding(padding: getPadding(left: 83, right: 82, bottom: 30), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Text("msg_already_have_an3".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRegular14.copyWith(letterSpacing: getHorizontalSize(0.14))), GestureDetector(onTap: () {onTapSignIn();}, child: Padding(padding: getPadding(left: 4), child: Text("lbl_sign_in".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistSemiBold14)))])))); } 
Future<void> onTapNext() async  { PostRegisterReq postRegisterReq = PostRegisterReq(username : controller.emailController.text,password : controller.inputedController.text,email : controller.emailController.text,role: Role.user,);try {
await controller.callCreateRegister(postRegisterReq.toJson(),);_onOnTapSignUpSuccess();} on PostRegisterResp {_onOnTapSignUpError();} on NoInternetException catch (e) {Get.rawSnackbar(message: e.toString());} catch (e) {
 //TODO: Handle generic errors
} } 
void _onOnTapSignUpSuccess() { Get.offAllNamed(AppRoutes.followArtistScreen); } 
void _onOnTapSignUpError() { 

Fluttertoast.showToast(msg: controller.postRegisterResp.message!.toString(),); } 
onTapButton() async  {         await GoogleAuthHelper().googleSignInProcess().then((googleUser) {
          if(googleUser!=null){
            //TODO Actions to be performed after signin
          } else {
            Get.snackbar('Error', 'user data is empty');
          }
        }).catchError((onError) {
            Get.snackbar('Error', onError.toString());
        });
         } 
onTapButton1() async  {             await FacebookAuthHelper().facebookSignInProcess().then((facebookUser) {
              //TODO Actions to be performed after signin
              }).catchError((onError) {
              Get.snackbar('Error', onError.toString());
            });
             } 
onTapSignIn() { Get.offAllNamed(AppRoutes.loginScreen); } 
 }
